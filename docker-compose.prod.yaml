services:
  # Jenkins
  jenkins:
    image: jenkins/jenkins:lts
    container_name: jenkins
    restart: always
    ports:
      - "127.0.0.1:8080:8080"
      - "127.0.0.1:50000:50000"
    volumes:
      - jenkins-data:/var/jenkins_home
    networks:
      - confess-network

  # Nginx
  nginx:
    build:
      context: ./docker
      dockerfile: nginx.dockerfile
      args:
        - UID=${UID:-1000}
        - GID=${GID:-1000}
        - USER=${USER:-confess}
    restart: unless-stopped
    container_name: nginx
    ports:
    - ${APP_PORT}:8000
    volumes:
      - ./:/var/www/html
      - .env:/var/www/html/.env
    depends_on:
      - php
      - mariadb
      - phpmyadmin
    networks:
      - confess-network

  # PHP
  php:
    build:
      context: ./docker
      dockerfile: php.dockerfile
      args:
        - UID=${UID:-1000}
        - GID=${GID:-1000}
        - USER=${USER:-confess}
    restart: always
    container_name: php
    volumes:
      - ./:/var/www/html
      - .env:/var/www/html/.env
    networks:
      - confess-network

  # MariaDB
  mariadb:
    image: mariadb:11.0.3
    container_name: mariadb
    restart: unless-stopped
    tty: true
    environment:
      MARIADB_DATABASE: ${DB_DATABASE}
      MARIADB_USER: ${DB_USERNAME}
      MARIADB_ROOT_PASSWORD: ${DB_PASSWORD}
      MARIADB_ALLOW_EMPTY_ROOT_PASSWORD: 1
      SERVICE_TAGS: dev
      SERVICE_NAME: mariadb
    volumes:
      - confess-dbdata:/var/lib/mysql
    networks:
      - confess-network

  # PhpMyAdmin
  phpmyadmin:
    image: phpmyadmin:5.2.1
    container_name: phpmyadmin
    environment:
      PMA_HOST: ${DB_HOST}
      PMA_PORT: ${DB_PORT}
    depends_on:
      - mariadb
    ports:
      - 127.0.0.1:8888:80
    networks:
      - confess-network

  # Composer
  composer:
    build:
      context: ./docker
      dockerfile: composer.dockerfile
      args:
        - UID=${UID:-1000}
        - GID=${GID:-1000}
        - USER=${USER:-confess}
    container_name: composer
    volumes:
      - ./:/var/www/html
      - .env:/var/www/html/.env
    working_dir: /var/www/html
    depends_on:
      - php
    user: ${USER:-confess}
    profiles: ["composer"]
    entrypoint: ["composer", "--ignore-platform-reqs"]
    networks:
      - confess-network

  # NPM
  npm:
    image: node:21.1.0-alpine
    container_name: npm
    volumes:
      - ./:/var/www/html
      - .env:/var/www/html/.env
    ports:
      - 127.0.0.1:3000:3000
      - 127.0.0.1:3001:3001
    working_dir: /var/www/html
    profiles: ["npm"]
    entrypoint: ["npm"]
    networks:
      - confess-network

  # Custom services
  laravel-setup:
    build:
      context: ./docker
      dockerfile: php.dockerfile
      args:
        - UID=${UID:-1000}
        - GID=${GID:-1000}
        - USER=${USER:-confess}
    container_name: laravel-setup
    volumes:
      - ./:/var/www/html
      - .env:/var/www/html/.env
    depends_on:
      - mariadb
    profiles: ["setup"]
    working_dir: /var/www/html
    user: ${USER:-confess}
    entrypoint: ["/bin/sh", "-c"]
    command:
      - |
        php artisan key:generate
        php artisan storage:link
        php artisan config:cache
        php artisan event:cache
        php artisan view:cache
        php artisan migrate --seed
    networks:
      - confess-network

  artisan:
    build:
      context: ./docker
      dockerfile: php.dockerfile
      args:
        - UID=${UID:-1000}
        - GID=${GID:-1000}
        - USER=${USER:-confess}
    container_name: artisan
    volumes:
      - ./:/var/www/html
      - .env:/var/www/html/.env
    depends_on:
      - mariadb
    working_dir: /var/www/html
    profiles: ["artisan"]
    user: ${USER:-confess}
    entrypoint: ["php", "/var/www/html/artisan"]
    networks:
      - confess-network

# Networks
networks:
  confess-network:
    driver: bridge

# Volumes
volumes:
  confess-dbdata:
    driver: local
  jenkins-data:
    driver: local
